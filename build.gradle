buildscript {
    ext.kotlin_version = "1.2.51"

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1"
    }
}

group 'org.cikig'
version '1.0-SNAPSHOT'

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "application"

sourceCompatibility = 1.8

mainClassName = "WlanControlBotKt"

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    def vertxVersion = "3.5.2"
    def nettyVersion = "4.1.19.Final"
    def jacksonVersion = "2.9.5"
    def logbackVersion = "1.2.3"

    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")

    compile("io.vertx:vertx-lang-kotlin:$vertxVersion") {
        exclude(group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre8")
        exclude(group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre7")
    }
    compile("io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion") {
        exclude(group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre8")
        exclude(group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jre7")
    }
    compile("io.vertx:vertx-web:$vertxVersion")
    compile("io.netty:netty-transport-native-epoll:$nettyVersion:linux-x86_64")

    compile("ch.qos.logback:logback-classic:$logbackVersion")
    compile("commons-io:commons-io:2.6")

    testCompile("junit:junit:4.12")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

jar {
    manifest {
        attributes["Implementation-Title"] = project.name
        attributes["Implementation-Version"] = version
        attributes["Main-Class"] = "WlanControlBotKt"
        attributes["Class-Path"] = configurations.compile.collect {
            it.getName()
        }.join(" ")
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}
